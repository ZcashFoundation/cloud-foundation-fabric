# skip boilerplate check

# [opt] DNS zones to be created as children of the environment_dns_zone defined in defaults
dns_zones: []

# [opt] Contacts for billing alerts and important notifications
essential_contacts:
  - devops@zfnd.org

# Folder the project will be created as children of
folder_id: folders/319341746722

# [opt] Authoritative IAM bindings in group => [roles] format
group_iam:
  engineers@zfnd.org:
    - roles/editor

# [opt] Authoritative IAM bindings in role => [principals] format
# Generally used to grant roles to service accounts external to the project
iam_bindings:
  workload_identity_binding:
    role: roles/iam.workloadIdentityUser
    members:
      - principalSet://iam.googleapis.com/projects/771011584009/locations/global/workloadIdentityPools/zfnd-bootstrap/*
      - serviceAccount:artifact-publisher@zfnd-dev-zebra.iam.gserviceaccount.com
      - serviceAccount:instance-deployer@zfnd-dev-zebra.iam.gserviceaccount.com
  default_compute_editor_binding:
    role: roles/editor
    members:
      - serviceAccount:1059680692020@cloudservices.gserviceaccount.com

# [opt] Service robots and keys they will be assigned as cryptoKeyEncrypterDecrypter
# in service => [keys] format
# kms_service_agents:
#   compute: [key1, key2]
#   storage: [key1, key2]

billing_account: 017C4E-D11840-4FDC79
# [opt] Labels for the project - merged with the ones defined in defaults
labels:
  team: engineering
  environment: dev
  scope: zebra

parent: folders/319341746722

# [opt] Org policy overrides defined at project level
org_policies:
  "compute.disableGuestAttributesAccess":
    rules:
    - enforce: false
  "compute.trustedImageProjects":
    rules:
    - allow:
        all: true
        # values:
        # - projects/zfnd-prod-iac-core-0
        # - projects/zebra-zealous
        # - projects/cos-cloud
        # - projects/dataflow-service-producer-prod
        # - projects/serverless-vpc-access-images
        # - projects/windows-cloud
  "compute.vmExternalIpAccess":
    rules:
      - allow:
          all: true
  "compute.requireOsLogin":
    rules:
      - enforce: false
  "iam.allowServiceAccountCredentialLifetimeExtension":
    rules:
      - allow:
          all: true
  "iam.allowedPolicyMemberDomains":
    rules:
    - allow:
        all: true

# [opt] Service account to create for the project and their roles on the project
# in name => [roles] format
service_accounts:
  instance-deployer:
    display_name: CI instance deploying SA.
    iam_self_roles:
      - roles/compute.instanceAdmin
      - roles/compute.storageAdmin
      - roles/compute.loadBalancerAdmin
      - roles/errorreporting.user
      - roles/logging.logWriter
      - roles/monitoring.metricWriter
      - roles/artifactregistry.reader
      - roles/iam.serviceAccountUser
      - roles/run.admin
  artifact-publisher:
    display_name: Artifact Registry publisher SA.
    iam_self_roles:
      - roles/artifactregistry.writer

# [opt] APIs to enable on the project.
services:
  - artifactregistry.googleapis.com
  - billingbudgets.googleapis.com
  - compute.googleapis.com
  - container.googleapis.com
  - clouderrorreporting.googleapis.com
  - cloudresourcemanager.googleapis.com
  - containeranalysis.googleapis.com
  - logging.googleapis.com
  - monitoring.googleapis.com
  - osconfig.googleapis.com
  - orgpolicy.googleapis.com
  - networkmanagement.googleapis.com
  - run.googleapis.com
  - stackdriver.googleapis.com
  - storage.googleapis.com
  - iap.googleapis.com

# [opt] Roles to assign to the service identities in service => [roles] format
service_identities_iam:
  compute:
    - roles/storage.objectViewer

  # [opt] VPC setup.
  # If set enables the `compute.googleapis.com` service and configures
  # service project attachment

shared_vpc_service_config:
  # Host project the project will be service project of
  host_project: zfnd-dev-net-spoke-0
  service_identity_iam:
    "roles/vpcaccess.user":
    - cloudrun
    "roles/container.hostServiceAgentUser":
    - container-engine
  # [opt] Subnets in the host project where principals will be granted networkUser
  # in region/subnet-name => [principals]
  service_identity_subnet_iam:
    us-east1/dev-default-ue1:
    - cloudservices
    # [opt] If set, enables the container API
    - container-engine
  network_subnet_users:
    us-east1/dev-default-ue1:
    - serviceAccount:instance-deployer@zfnd-dev-zebra.iam.gserviceaccount.com
    - serviceAccount:1059680692020-compute@developer.gserviceaccount.com
    - serviceAccount:service-1059680692020@serverless-robot-prod.iam.gserviceaccount.com
